/*
 *  UCF COP3330 Summer 2021 Assignment 4 Solution
 *  Copyright 2021 Jose Valencia
 */

@startuml
'https://plantuml.com/class-diagram

class TodoList {

    + main(): void
    + start(): void

}

class TodoListController {

    AllLists lists
    ObservableList listOfLists
    ObservableList listOfTasks

    - ListView<String> mainListView
    - ListView<String> taskListView

    - TextField newListName
    - TextField editListName
    - TextField newTaskName
    - TextField editTaskName

    - DatePicker addDatePicker
    - DatePicker editTaskDatePicker

    - Button addListBtn
    - Button addTaskBtn
    - Button editListBtn
    - Button editTaskBtn
    - Button removeListBtn
    - Button removeTaskBtn
    - Button markAsCompletedBtn
    - Button viewAllTasksBtn
    - Button viewCompletedBtn
    - Button viewNotCompletedBtn
    - Button exportSelectedBtn
    - Button importListBtn

    + initialize(URL url, ResourceBundle rb): void

    - updateTaskListView(): void
    - addListBtnClicked(Event e): void
    - addTaskBtnClicked(Event e): void
    - editListBtnClicked(Event e): void
    - editTaskBtnClicked(Event e): void
    - removeListBtnClicked(Event e): void
    - removeTaskBtnClicked(Event e): void
    - markAsCompletedBtnClicked(Event e): void
    - viewAllTasksBtnClicked(Event e): void
    - viewCompletedBtnClicked(Event e): void
    - viewNotCompletedBtnClicked(Event e): void
    - exportSelectedBtnClicked(Event e): void
    - importListBtnClicked(Event e): void
}

class AllLists {

    ArrayList<List> listsInProgram

    + AllLists()

    + addList(List list): void
    + removeList(String list): void
    + editList(String list, String name): void
    + importList(File file): void
    + exportList(String list): String


}

class List {

    String name
    ArrayList<Tasks> tasks

    + List(String name)

    + setName(String name): void
    + getName(): String
    + getTasks(): ArrayList<Task>

    + addTask(Task task): void
    + editTask(String task, String name, String date): void
    + removeTask(String task): void
    + markTaskCompleted(String task, Boolean completed): void
    + showCompleteTasks(): ArrayList<Task>
    + showIncompleteTasks(): ArrayList<Task>
    + showAllTasks(): ArrayList<Task>

    + toString(): String


}

class Task {

    String desc
    String date
    Boolean completed

    + Task(String desc, String date, Boolean completed)

    + setDesc(String desc): void
    + setDate(String date): void
    + setCompleted(Boolean completed): void
    + getDesc(): String
    + getDate(): String
    + getCompleted(): boolean

    + toString(): String


}

javafx.Initializable <|... TodoListController
javafx.Application <|-- TodoList
TodoList <-- TodoListController
TodoListController *-> AllLists
AllLists *--> List
List *--> Task


@enduml